name: 'Deploy'
description: 'Deploy Terraform configuration to Cloudflare'

inputs:
  ENVIRONMENT:
    description: 'The environment to deploy to'
    required: true

  BACKEND_ENDPOINT:
    description: 'The backend endpoint'
    required: true

  BACKEND_BUCKET:
    description: 'The backend bucket'
    required: true

  BACKEND_KEY:
    description: 'The backend key'
    required: true

  BACKEND_REGION:
    description: 'The backend region'
    required: true

  CLOUDFLARE_API_TOKEN:
    description: 'The Cloudflare API token'
    required: true

  CLOUDFLARE_ZONE_ID:
    description: 'The Cloudflare zone ID'
    required: true

  CLOUDFLARE_ACCOUNT_ID:
    description: 'The Cloudflare account ID'
    required: true

runs:
  using: 'composite'
  steps:
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.5

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      shell: bash
      env:
        BACKEND_ENDPOINT: ${{ inputs.BACKEND_ENDPOINT }}
        BACKEND_BUCKET: ${{ inputs.BACKEND_BUCKET }}
        BACKEND_KEY: ${{ inputs.BACKEND_KEY }}
        BACKEND_REGION: ${{ inputs.BACKEND_REGION }}
        ENVIROMENT: ${{ inputs.ENVIRONMENT }}
        CLOUDFLARE_API_TOKEN: ${{ inputs.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ZONE_ID: ${{ inputs.CLOUDFLARE_ZONE_ID }}
        CLOUDFLARE_ACCOUNT_ID: ${{ inputs.CLOUDFLARE_ACCOUNT_ID }}
      run: |
        terraform -chdir=terraform/cloudflare/envs/${{ inputs.ENVIRONMENT }} init \
        #terraform -chdir=terraform/envs/${{ inputs.ENVIRONMENT }} init \
        -backend-config="endpoint=${BACKEND_ENDPOINT}" \
        -backend-config="bucket=${BACKEND_BUCKET}" \
        -backend-config="key=${BACKEND_KEY}" \
        -backend-config="region=${BACKEND_REGION}" \
        -var environment=${{ inputs.ENVIRONMENT }} \
        -var cloudflare_api_token=$CLOUDFLARE_API_TOKEN \
        -var cloudflare_zone_id=$CLOUDFLARE_ZONE_ID \
        -var cloudflare_account_id=$CLOUDFLARE_ACCOUNT_ID

    # Terraform Validate
    - name: Terraform Validate
      shell: bash
      run: terraform -chdir=terraform/cloudflare/envs/${{ inputs.ENVIRONMENT }} validate -no-color
      #run: terraform -chdir=terraform/envs/${{ inputs.ENVIRONMENT }} validate -no-color \

    - name: Terraform Plan
      shell: bash
      env:
        BACKEND_ENDPOINT: ${{ inputs.BACKEND_ENDPOINT }}
        BACKEND_BUCKET: ${{ inputs.BACKEND_BUCKET }}
        BACKEND_KEY: ${{ inputs.BACKEND_KEY }}
        BACKEND_REGION: ${{ inputs.BACKEND_REGION }}
        ENVIROMENT: ${{ inputs.ENVIRONMENT }}
        CLOUDFLARE_API_TOKEN: ${{ inputs.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ZONE_ID: ${{ inputs.CLOUDFLARE_ZONE_ID }}
        CLOUDFLARE_ACCOUNT_ID: ${{ inputs.CLOUDFLARE_ACCOUNT_ID }}
      run: |
        terraform -chdir=terraform/cloudflare/envs/${{ inputs.ENVIRONMENT }} plan -no-color \
        #terraform -chdir=terraform/envs/${{ inputs.ENVIRONMENT }} plan -no-color \
        -var backend_endpoint=${BACKEND_ENDPOINT} \
        -var backend_bucket=${BACKEND_BUCKET} \
        -var backend_key=${BACKEND_KEY} \
        -var backend_region=${BACKEND_REGION} \
        -var environment=${{ inputs.ENVIRONMENT }} \
        -var cloudflare_api_token=$CLOUDFLARE_API_TOKEN \
        -var cloudflare_zone_id=$CLOUDFLARE_ZONE_ID \
        -var cloudflare_account_id=$CLOUDFLARE_ACCOUNT_ID

    # Terraform Apply
    - name: Terraform Apply
      shell: bash
      env:
        BACKEND_ENDPOINT: ${{ inputs.BACKEND_ENDPOINT }}
        BACKEND_BUCKET: ${{ inputs.BACKEND_BUCKET }}
        BACKEND_KEY: ${{ inputs.BACKEND_KEY }}
        BACKEND_REGION: ${{ inputs.BACKEND_REGION }}
        ENVIROMENT: ${{ inputs.ENVIRONMENT }}
        CLOUDFLARE_API_TOKEN: ${{ inputs.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ZONE_ID: ${{ inputs.CLOUDFLARE_ZONE_ID }}
        CLOUDFLARE_ACCOUNT_ID: ${{ inputs.CLOUDFLARE_ACCOUNT_ID }}
      run: |
        terraform -chdir=terraform/cloudflare/envs/${{ inputs.ENVIRONMENT }} apply -auto-approve \
        #terraform -chdir=terraform/envs/${{ inputs.ENVIRONMENT }} apply -auto-approve \
        -var backend_endpoint=${BACKEND_ENDPOINT} \
        -var backend_bucket=${BACKEND_BUCKET} \
        -var backend_key=${BACKEND_KEY} \
        -var backend_region=${BACKEND_REGION} \
        -var environment=${{ inputs.ENVIRONMENT }} \
        -var cloudflare_api_token=$CLOUDFLARE_API_TOKEN \
        -var cloudflare_zone_id=$CLOUDFLARE_ZONE_ID \
        -var cloudflare_account_id=$CLOUDFLARE_ACCOUNT_ID