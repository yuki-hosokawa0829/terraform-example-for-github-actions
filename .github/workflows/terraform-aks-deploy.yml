name: 'Terraform-AKS-Deploy'
concurrency: ${{ github.workflow }}-${{ github.ref }}-${{ github.run_number }}

on:
  push:
    branches:
    - main
    paths: ['manifest/**', '.github/workflows/terraform-aks-deploy.yml']
  pull_request:
    branches:
    - main
    paths: ['manifest/**', '.github/workflows/terraform-aks-deploy.yml']

permissions:
  id-token: write
  contents: read

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
  manifest_path: 'manifest/aks-store-quickstart.yaml'

jobs:
  build:
    name: 'Apply AKS manifest'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code 
        uses: actions/checkout@v3

      - name: Azure login
        id: login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_AD_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ vars.RESOURCE_GROUP_NAME }}' 
          cluster-name: '${{ vars.AKS_CLUSTER_NAME }}'

      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
             ${{ env.manifest_path }}