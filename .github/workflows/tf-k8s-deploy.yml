name: 'Kubernetes Deploy'

on:
  push:
    branches:
    - main
    paths: ['manifest/**', '.github/workflows/tf-k8s-deploy.yml']
  pull_request:
    branches:
    - main
    paths: ['manifest/**', '.github/workflows/tf-k8s-deploy.yml']

env:
  manifest_path: './manifest'

permissions:
  id-token: write
  contents: read

jobs:
  deploy-container:
    name: 'Apply AKS manifest'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout source code 
        uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CONTAINER_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: '2adc2d87-888b-4118-bcaa-b8c51710e214'
          tenant-id: 'd1448c9d-f93c-43c8-880d-402b4ba0bdca'
          subscription-id: 'caa6074c-280f-4787-856a-219fd5467ee0'

      - name: AKS Get Credential
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az aks get-credentials --admin --overwrite-existing \
            --resource-group ${{ vars.RESOURCE_GROUP_NAME }} \
            --name ${{ vars.AKS_CLUSTER_NAME }}
            --file ./kube/${{ vars.AKS_CLUSTER_NAME }}

      - name: Apply manifest
        run: |
          kubectl apply -k ${{ env.manifest_path}} \
          --kubeconfig ./kube/${{ vars.AKS_CLUSTER_NAME }}