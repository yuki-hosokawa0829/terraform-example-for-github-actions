name: 'Terraform Cloudflare Plan/Apply Develop'

on:
  push:
    branches:
    - main

permissions:
  id-token: write
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.ref, 'refs/heads/feature/') && github.ref != 'refs/heads/main' && github.base_ref != 'refs/heads/main'}}
    steps:
    - name: Unknown Branch
      run: exit 1

  terraform-cf-deploy:
    runs-on: ubuntu-latest
    environment: develop
    if: ${{ startsWith(github.ref, 'refs/heads/feature/') || github.ref == 'refs/heads/main' || github.base_ref == 'refs/heads/main'}}
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: Deploy
      uses: ./.github/actions/deploy
      with:
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        TENANT_ID: ${{ secrets.TENANT_ID }}
        SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
        ENVIRONMENT: ${{ vars.ENVIRONMENT }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_ACCESS_KEY_ID }}
        CLOUDFLARE_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_SECRET_ACCESS_KEY }}
        DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
        CLUSTER_IP: ${{ vars.CLUSTER_IP }}
        RESOURCE_GROUP_NAME: ${{ vars.RESOURCE_GROUP_NAME }}
        AKS_CLUSTER_NAME: ${{ vars.AKS_CLUSTER_NAME }}
